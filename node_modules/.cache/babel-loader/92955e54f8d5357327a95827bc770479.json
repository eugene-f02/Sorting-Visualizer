{"ast":null,"code":"var _jsxFileName = \"/Users/eugene/Desktop/sorting-algo/sorting-algo/src/Timer.js\";\nimport React from 'react';\nexport default function Timer(props) {\n  let minutes = Math.floor(props.time / (60 * 1000) % 60);\n  let seconds = Math.floor(props.time / 1000 % 60);\n  let miliseconds = Math.floor(props.time / 10 % 100);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, \"time: \", (minutes < 10 ? '0' : \"\") + minutes + ':' + (seconds < 10 ? '0' : \"\") + seconds + '.' + (miliseconds < 10 ? '0' : \"\") + miliseconds, \" \"), start, resume, stop, reset);\n}","map":{"version":3,"sources":["/Users/eugene/Desktop/sorting-algo/sorting-algo/src/Timer.js"],"names":["React","Timer","props","minutes","Math","floor","time","seconds","miliseconds","start","resume","stop","reset"],"mappings":";AAAA,OAAQA,KAAR,MAAmB,OAAnB;AACA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACjC,MAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAYH,KAAK,CAACI,IAAN,IAAY,KAAG,IAAf,CAAD,GAAyB,EAApC,CAAd;AACA,MAAIC,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAYH,KAAK,CAACI,IAAN,GAAW,IAAZ,GAAoB,EAA/B,CAAd;AACA,MAAIE,WAAW,GAAGJ,IAAI,CAACC,KAAL,CAAYH,KAAK,CAACI,IAAN,GAAW,EAAZ,GAAkB,GAA7B,CAAlB;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAW,CAACH,OAAO,GAAG,EAAV,GAAe,GAAf,GAAqB,EAAtB,IAA0BA,OAA1B,GAAkC,GAAlC,IAAuCI,OAAO,GAAG,EAAV,GAAe,GAAf,GAAqB,EAA5D,IAAgEA,OAAhE,GAAwE,GAAxE,IAA6EC,WAAW,GAAG,EAAd,GAAmB,GAAnB,GAAyB,EAAtG,IAA0GA,WAArH,MADF,EAEGC,KAFH,EAGGC,MAHH,EAIGC,IAJH,EAKGC,KALH,CADF;AASH","sourcesContent":["import  React from 'react'\nexport default function Timer(props) {\n    let minutes = Math.floor((props.time/(60*1000)) % 60)\n    let seconds = Math.floor((props.time/1000) % 60)\n    let miliseconds = Math.floor((props.time/10) % 100)\n    return(\n      <div>\n        <h3>time: {(minutes < 10 ? '0' : \"\")+minutes+':'+(seconds < 10 ? '0' : \"\")+seconds+'.'+(miliseconds < 10 ? '0' : \"\")+miliseconds} </h3>\n        {start}\n        {resume}\n        {stop}\n        {reset}\n      </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}