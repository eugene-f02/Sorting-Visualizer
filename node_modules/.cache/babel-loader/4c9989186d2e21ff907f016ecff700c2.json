{"ast":null,"code":"var _jsxFileName = \"/Users/eugene/Desktop/sorting-algo/sorting-algo/src/Timer.js\";\nimport React from 'react';\nexport default function Timer(props) {\n  let minutes = Math.floor(this.state.time / (60 * 1000) % 60);\n  let seconds = Math.floor(this.state.time / 1000 % 60);\n  let miliseconds = Math.floor(this.state.time / 10 % 100);\n  let start = this.state.time === 0 ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: this.startTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, \"start\") : null;\n  let stop = this.state.isOn ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: this.stopTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \"stop\") : null;\n  let reset = this.state.time !== 0 && !this.state.isOn ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: this.resetTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"reset\") : null;\n  let resume = this.state.time !== 0 && !this.state.isOn ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: this.startTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"resume\") : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"time: \", (minutes < 10 ? '0' : \"\") + minutes + ':' + (seconds < 10 ? '0' : \"\") + seconds + '.' + (miliseconds < 10 ? '0' : \"\") + miliseconds, \" \"), start, resume, stop, reset);\n}\n\nfunction startTimer() {\n  this.setState({\n    time: this.state.time,\n    start: Date.now() - this.state.time,\n    isOn: true\n  });\n  this.timer = setInterval(() => this.setState({\n    time: Date.now() - this.state.start\n  }), 1);\n}\n\nfunction stopTimer() {\n  this.setState({\n    isOn: false\n  });\n  clearInterval(this.timer);\n}\n\nfunction resetTimer() {\n  this.setState({\n    time: 0\n  });\n}","map":{"version":3,"sources":["/Users/eugene/Desktop/sorting-algo/sorting-algo/src/Timer.js"],"names":["React","Timer","props","minutes","Math","floor","state","time","seconds","miliseconds","start","startTimer","stop","isOn","stopTimer","reset","resetTimer","resume","setState","Date","now","timer","setInterval","clearInterval"],"mappings":";AAAA,OAAQA,KAAR,MAAmB,OAAnB;AACA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACjC,MAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAY,KAAKC,KAAL,CAAWC,IAAX,IAAiB,KAAG,IAApB,CAAD,GAA8B,EAAzC,CAAd;AACA,MAAIC,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAY,KAAKC,KAAL,CAAWC,IAAX,GAAgB,IAAjB,GAAyB,EAApC,CAAd;AACA,MAAIE,WAAW,GAAGL,IAAI,CAACC,KAAL,CAAY,KAAKC,KAAL,CAAWC,IAAX,GAAgB,EAAjB,GAAuB,GAAlC,CAAlB;AACA,MAAIG,KAAK,GAAI,KAAKJ,KAAL,CAAWC,IAAX,KAAoB,CAArB,gBACV;AAAQ,IAAA,OAAO,EAAE,KAAKI,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADU,GAEV,IAFF;AAGA,MAAIC,IAAI,GAAI,KAAKN,KAAL,CAAWO,IAAZ,gBACT;AAAQ,IAAA,OAAO,EAAE,KAAKC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,GAET,IAFF;AAGA,MAAIC,KAAK,GAAI,KAAKT,KAAL,CAAWC,IAAX,KAAoB,CAApB,IAAyB,CAAC,KAAKD,KAAL,CAAWO,IAAtC,gBACV;AAAQ,IAAA,OAAO,EAAE,KAAKG,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADU,GAEV,IAFF;AAGA,MAAIC,MAAM,GAAI,KAAKX,KAAL,CAAWC,IAAX,KAAoB,CAApB,IAAyB,CAAC,KAAKD,KAAL,CAAWO,IAAtC,gBACX;AAAQ,IAAA,OAAO,EAAE,KAAKF,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADW,GAEX,IAFF;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAW,CAACR,OAAO,GAAG,EAAV,GAAe,GAAf,GAAqB,EAAtB,IAA0BA,OAA1B,GAAkC,GAAlC,IAAuCK,OAAO,GAAG,EAAV,GAAe,GAAf,GAAqB,EAA5D,IAAgEA,OAAhE,GAAwE,GAAxE,IAA6EC,WAAW,GAAG,EAAd,GAAmB,GAAnB,GAAyB,EAAtG,IAA0GA,WAArH,MADF,EAEGC,KAFH,EAGGO,MAHH,EAIGL,IAJH,EAKGG,KALH,CADF;AASH;;AACD,SAASJ,UAAT,GAAsB;AAClB,OAAKO,QAAL,CAAc;AACZX,IAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADL;AAEZG,IAAAA,KAAK,EAAES,IAAI,CAACC,GAAL,KAAa,KAAKd,KAAL,CAAWC,IAFnB;AAGZM,IAAAA,IAAI,EAAE;AAHM,GAAd;AAKA,OAAKQ,KAAL,GAAaC,WAAW,CAAC,MAAM,KAAKJ,QAAL,CAAc;AAC3CX,IAAAA,IAAI,EAAEY,IAAI,CAACC,GAAL,KAAa,KAAKd,KAAL,CAAWI;AADa,GAAd,CAAP,EAEpB,CAFoB,CAAxB;AAGD;;AAED,SAASI,SAAT,GAAqB;AACnB,OAAKI,QAAL,CAAc;AAACL,IAAAA,IAAI,EAAE;AAAP,GAAd;AACAU,EAAAA,aAAa,CAAC,KAAKF,KAAN,CAAb;AACD;;AAED,SAASL,UAAT,GAAsB;AACpB,OAAKE,QAAL,CAAc;AAACX,IAAAA,IAAI,EAAE;AAAP,GAAd;AACD","sourcesContent":["import  React from 'react'\nexport default function Timer(props) {\n    let minutes = Math.floor((this.state.time/(60*1000)) % 60)\n    let seconds = Math.floor((this.state.time/1000) % 60)\n    let miliseconds = Math.floor((this.state.time/10) % 100)\n    let start = (this.state.time === 0) ?\n      <button onClick={this.startTimer}>start</button> :\n      null\n    let stop = (this.state.isOn) ?\n      <button onClick={this.stopTimer}>stop</button> :\n      null\n    let reset = (this.state.time !== 0 && !this.state.isOn) ?\n      <button onClick={this.resetTimer}>reset</button> :\n      null\n    let resume = (this.state.time !== 0 && !this.state.isOn) ?\n      <button onClick={this.startTimer}>resume</button> :\n      null\n    return(\n      <div>\n        <h3>time: {(minutes < 10 ? '0' : \"\")+minutes+':'+(seconds < 10 ? '0' : \"\")+seconds+'.'+(miliseconds < 10 ? '0' : \"\")+miliseconds} </h3>\n        {start}\n        {resume}\n        {stop}\n        {reset}\n      </div>\n    )\n}\nfunction startTimer() {\n    this.setState({\n      time: this.state.time,\n      start: Date.now() - this.state.time,\n      isOn: true\n    })\n    this.timer = setInterval(() => this.setState({\n      time: Date.now() - this.state.start\n    }), 1);\n  }\n\n  function stopTimer() {\n    this.setState({isOn: false})\n    clearInterval(this.timer)\n  }\n\n  function resetTimer() {\n    this.setState({time: 0})\n  }"]},"metadata":{},"sourceType":"module"}