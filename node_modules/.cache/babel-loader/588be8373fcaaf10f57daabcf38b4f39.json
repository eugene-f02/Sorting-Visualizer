{"ast":null,"code":"export default function merge_sort_animations(arr) {\n  let animations = [];\n  let counter = [0]; // let k=1\n  // asd(k)\n  // return k\n\n  merge(arr, arr, animations, counter);\n  return counter;\n}\n\nfunction asd(k) {\n  return k++;\n}\n\nfunction merge(arr, auxiliaryArr, animations, counter) {\n  if (auxiliaryArr.length > 1) {\n    let midIndx = Math.floor(auxiliaryArr.length / 2);\n    let L = auxiliaryArr.slice(0, midIndx);\n    let R = auxiliaryArr.slice(midIndx);\n    console.log(L, R, counter[0]);\n    merge(arr, L, animations, counter);\n    merge(arr, R, animations, counter);\n    let i,\n        j = 0;\n\n    while (i < L.length && j < R.length) {\n      if (L[i] > R[j]) {\n        arr[counter[0]] = L[i];\n        i++;\n      } else {\n        arr[counter[0]] = R[j];\n        j++;\n      }\n\n      counter[0]++;\n    }\n\n    while (i < L.length) {\n      arr[counter[0]] = L[i];\n      i++;\n      counter[0]++;\n    }\n\n    while (j < R.length) {\n      arr[counter[0]] = R[j];\n      j++;\n      counter[0]++;\n    }\n  }\n}","map":{"version":3,"sources":["/Users/eugene/Desktop/sorting-algo/sorting-algo/src/sorting-algo/merge_sort.js"],"names":["merge_sort_animations","arr","animations","counter","merge","asd","k","auxiliaryArr","length","midIndx","Math","floor","L","slice","R","console","log","i","j"],"mappings":"AAAA,eAAe,SAASA,qBAAT,CAA+BC,GAA/B,EAAmC;AAClD,MAAIC,UAAU,GAAC,EAAf;AACA,MAAIC,OAAO,GAAC,CAAC,CAAD,CAAZ,CAFkD,CAGlD;AACA;AACA;;AACAC,EAAAA,KAAK,CAACH,GAAD,EAAKA,GAAL,EAASC,UAAT,EAAoBC,OAApB,CAAL;AACA,SAAOA,OAAP;AACC;;AAED,SAASE,GAAT,CAAaC,CAAb,EAAe;AACX,SAAOA,CAAC,EAAR;AAEH;;AAED,SAASF,KAAT,CAAeH,GAAf,EAAmBM,YAAnB,EAAgCL,UAAhC,EAA2CC,OAA3C,EAAmD;AAC/C,MAAII,YAAY,CAACC,MAAb,GAAsB,CAA1B,EAA4B;AACxB,QAAIC,OAAO,GAACC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,MAAb,GAAoB,CAA/B,CAAZ;AACA,QAAII,CAAC,GAAGL,YAAY,CAACM,KAAb,CAAmB,CAAnB,EAAqBJ,OAArB,CAAR;AACA,QAAIK,CAAC,GAAEP,YAAY,CAACM,KAAb,CAAmBJ,OAAnB,CAAP;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ,EAAcE,CAAd,EAAgBX,OAAO,CAAC,CAAD,CAAvB;AACAC,IAAAA,KAAK,CAACH,GAAD,EAAKW,CAAL,EAAOV,UAAP,EAAkBC,OAAlB,CAAL;AACAC,IAAAA,KAAK,CAACH,GAAD,EAAKa,CAAL,EAAOZ,UAAP,EAAkBC,OAAlB,CAAL;AACA,QAAIc,CAAJ;AAAA,QAAMC,CAAC,GAAC,CAAR;;AAEA,WAAMD,CAAC,GAACL,CAAC,CAACJ,MAAJ,IAAcU,CAAC,GAACJ,CAAC,CAACN,MAAxB,EAA+B;AAC3B,UAAII,CAAC,CAACK,CAAD,CAAD,GAAKH,CAAC,CAACI,CAAD,CAAV,EAAc;AACVjB,QAAAA,GAAG,CAACE,OAAO,CAAC,CAAD,CAAR,CAAH,GAAgBS,CAAC,CAACK,CAAD,CAAjB;AACAA,QAAAA,CAAC;AACJ,OAHD,MAIK;AACDhB,QAAAA,GAAG,CAACE,OAAO,CAAC,CAAD,CAAR,CAAH,GAAgBW,CAAC,CAACI,CAAD,CAAjB;AACAA,QAAAA,CAAC;AACJ;;AACDf,MAAAA,OAAO,CAAC,CAAD,CAAP;AAEH;;AAED,WAAOc,CAAC,GAACL,CAAC,CAACJ,MAAX,EAAkB;AACdP,MAAAA,GAAG,CAACE,OAAO,CAAC,CAAD,CAAR,CAAH,GAAgBS,CAAC,CAACK,CAAD,CAAjB;AACAA,MAAAA,CAAC;AACDd,MAAAA,OAAO,CAAC,CAAD,CAAP;AACH;;AAED,WAAOe,CAAC,GAACJ,CAAC,CAACN,MAAX,EAAkB;AACdP,MAAAA,GAAG,CAACE,OAAO,CAAC,CAAD,CAAR,CAAH,GAAgBW,CAAC,CAACI,CAAD,CAAjB;AACAA,MAAAA,CAAC;AACDf,MAAAA,OAAO,CAAC,CAAD,CAAP;AACH;AACJ;AACJ","sourcesContent":["export default function merge_sort_animations(arr){\nlet animations=[]\nlet counter=[0]\n// let k=1\n// asd(k)\n// return k\nmerge(arr,arr,animations,counter)\nreturn counter\n}\n\nfunction asd(k){\n    return k++\n\n}\n\nfunction merge(arr,auxiliaryArr,animations,counter){\n    if (auxiliaryArr.length > 1){\n        let midIndx=Math.floor(auxiliaryArr.length/2)\n        let L = auxiliaryArr.slice(0,midIndx)\n        let R= auxiliaryArr.slice(midIndx)\n        console.log(L,R,counter[0])\n        merge(arr,L,animations,counter)\n        merge(arr,R,animations,counter)\n        let i,j=0\n\n        while(i<L.length && j<R.length){\n            if (L[i]>R[j]){\n                arr[counter[0]]=L[i]\n                i++\n            }\n            else {\n                arr[counter[0]]=R[j]\n                j++\n            }\n            counter[0]++\n        \n        }\n        \n        while (i<L.length){\n            arr[counter[0]]=L[i]\n            i++\n            counter[0]++\n        }\n        \n        while (j<R.length){\n            arr[counter[0]]=R[j]\n            j++\n            counter[0]++\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}