{"ast":null,"code":"var _jsxFileName = \"/Users/eugene/Desktop/sorting-algo/sorting-algo/src/Header.js\";\nimport React from 'react';\nimport Timer from './Timer.js';\nimport Bars, { MAX_SPEED, MIN_SPEED } from './Bars.js';\nexport default function Header(props) {\n  let speed = \"\";\n  if (this.props.state.animation_speed > 120) speed = \"very fast\";else if (this.props.state.animation_speed > 90) speed = \"fast\";else if (this.props.state.animation_speed > 50) speed = \"medium\";else speed = \"slow\";\n  let max = Math.floor(window.innerWidth / 25 * 0.9);\n  let min = Math.floor(window.innerWidth / 25 * 0.25);\n  return /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"horizontalCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"style\",\n    id: \"generate_new_array\",\n    onClick: () => {\n      this.props.generate_new_array();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Generate New Array\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => this.props.sortBars(\"quick\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Quick Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => this.props.sortBars(\"heap\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Heap Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => this.props.sortBars(\"merge\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Merge Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => this.props.sortBars(\"bubble\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Bubble Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => this.props.sortBars(\"insert\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Insertion Sort\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"sliderContainer\",\n    className: \"horizontalCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sliders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, \"Speed (\", speed, \"): \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"slider\",\n    type: \"range\",\n    min: MIN_SPEED,\n    max: MAX_SPEED,\n    value: this.props.state.animation_speed,\n    name: \"animation_speed\",\n    onChange: this.props.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"stop\",\n    onClick: () => this.props.StopOrReset(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, this.props.state.sorted ? \"Reset\" : \"Stop\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sliders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Bars (\", this.props.state.num_of_bars, \"):\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"slider\",\n    id: \"barSlider\",\n    type: \"range\",\n    min: min < 2 ? 2 : min,\n    max: max < 2 ? 2 : max,\n    value: this.props.state.num_of_bars,\n    name: \"num_of_bars\",\n    onChange: this.props.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Timer, {\n    time: this.props.state.time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/eugene/Desktop/sorting-algo/sorting-algo/src/Header.js"],"names":["React","Timer","Bars","MAX_SPEED","MIN_SPEED","Header","props","speed","state","animation_speed","max","Math","floor","window","innerWidth","min","generate_new_array","sortBars","handleChange","StopOrReset","sorted","num_of_bars","time"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Timer from './Timer.js'\nimport Bars, {MAX_SPEED,MIN_SPEED} from './Bars.js'\n\nexport default function Header(props) {\n         let speed=\"\"\n\n\n        if (this.props.state.animation_speed>120)speed=\"very fast\"\n        else if (this.props.state.animation_speed>90)speed=\"fast\"\n        else if (this.props.state.animation_speed>50)speed=\"medium\"\n        else speed=\"slow\"\n\n\n        let max =Math.floor(window.innerWidth/25*0.9)\n        let min=Math.floor(window.innerWidth/25*0.25)\n\n        return ( \n            <header>\n            <div className='horizontalCenter'>\n            <button className=\"style\" id=\"generate_new_array\" onClick={() => {this.props.generate_new_array()}}>Generate New Array</button>\n            <button onClick={() => this.props.sortBars(\"quick\")}>Quick Sort</button>\n            <button onClick={() => this.props.sortBars(\"heap\")}>Heap Sort</button>\n            <button onClick={() => this.props.sortBars(\"merge\")}>Merge Sort</button>\n            <button onClick={() => this.props.sortBars(\"bubble\")}>Bubble Sort</button>\n            <button onClick={() => this.props.sortBars(\"insert\")}>Insertion Sort</button>\n            {/* <button onClick={() => console.log(this.state)}>State</button> */}\n            </div>\n\n            <div id='sliderContainer' className='horizontalCenter'>\n            <span className=\"sliders\">\n                    <label>Speed ({speed}): </label>\n                    <input className=\"slider\"\n                            type=\"range\" \n                            min={MIN_SPEED} max={MAX_SPEED} value={this.props.state.animation_speed}\n                            name=\"animation_speed\" \n                            onChange={this.props.handleChange} \n                    />\n            </span>\n\n            <button id=\"stop\" onClick={() => this.props.StopOrReset()}>{this.props.state.sorted ? \"Reset\" : \"Stop\"}</button>\n\n            <span className=\"sliders\">\n                    <label>Bars ({this.props.state.num_of_bars}):</label>\n                    <input  className=\"slider\" id='barSlider'\n                            type=\"range\" \n                            min={min<2 ? 2: min} max={max<2 ? 2:max} value={this.props.state.num_of_bars}\n                            name=\"num_of_bars\" \n                            onChange={this.props.handleChange} \n                    />\n            </span>\n            </div>\n            <Timer time={this.props.state.time}/>\n            </header>\n        )\n    }"]},"metadata":{},"sourceType":"module"}