{"ast":null,"code":"export default function merge_sort_animations(arr) {\n  let animations = []; // let k=1\n  // asd(k)\n  // return k\n\n  merge(arr, arr, animations, [0]);\n  return arr;\n}\n\nfunction asd(k) {\n  return k++;\n}\n\nfunction merge(arr, auxiliaryArr, animations, counter) {\n  if (auxiliaryArr.length > 1) {\n    let midIndx = Math.floor(auxiliaryArr.length / 2);\n    let L = auxiliaryArr.slice(0, midIndx);\n    let R = auxiliaryArr.slice(midIndx);\n    console.log(L, R, counter[0]);\n    merge(arr, L, animations, counter);\n    merge(arr, R, animations, counter);\n    let i,\n        j = 0;\n\n    while (i < L.length && j < R.length) {\n      if (L[i] > R[j]) {\n        arr[counter[0]] = L[i];\n        i++;\n      } else {\n        arr[counter[0]] = R[j];\n        j++;\n      }\n\n      counter[0]++;\n    }\n\n    while (i < L.length) {\n      arr[counter[0]] = L[i];\n      i++;\n      counter[0]++;\n    }\n\n    while (j < R.length) {\n      arr[counter[0]] = R[j];\n      j++;\n      counter[0]++;\n    }\n  }\n}","map":{"version":3,"sources":["/Users/eugene/Desktop/sorting-algo/sorting-algo/src/sorting-algo/merge_sort.js"],"names":["merge_sort_animations","arr","animations","merge","asd","k","auxiliaryArr","counter","length","midIndx","Math","floor","L","slice","R","console","log","i","j"],"mappings":"AAAA,eAAe,SAASA,qBAAT,CAA+BC,GAA/B,EAAmC;AAClD,MAAIC,UAAU,GAAC,EAAf,CADkD,CAElD;AACA;AACA;;AACAC,EAAAA,KAAK,CAACF,GAAD,EAAKA,GAAL,EAASC,UAAT,EAAoB,CAAC,CAAD,CAApB,CAAL;AACA,SAAOD,GAAP;AACC;;AAED,SAASG,GAAT,CAAaC,CAAb,EAAe;AACX,SAAOA,CAAC,EAAR;AAEH;;AAED,SAASF,KAAT,CAAeF,GAAf,EAAmBK,YAAnB,EAAgCJ,UAAhC,EAA2CK,OAA3C,EAAmD;AAC/C,MAAID,YAAY,CAACE,MAAb,GAAsB,CAA1B,EAA4B;AACxB,QAAIC,OAAO,GAACC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACE,MAAb,GAAoB,CAA/B,CAAZ;AACA,QAAII,CAAC,GAAGN,YAAY,CAACO,KAAb,CAAmB,CAAnB,EAAqBJ,OAArB,CAAR;AACA,QAAIK,CAAC,GAAER,YAAY,CAACO,KAAb,CAAmBJ,OAAnB,CAAP;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ,EAAcE,CAAd,EAAgBP,OAAO,CAAC,CAAD,CAAvB;AACAJ,IAAAA,KAAK,CAACF,GAAD,EAAKW,CAAL,EAAOV,UAAP,EAAkBK,OAAlB,CAAL;AACAJ,IAAAA,KAAK,CAACF,GAAD,EAAKa,CAAL,EAAOZ,UAAP,EAAkBK,OAAlB,CAAL;AACA,QAAIU,CAAJ;AAAA,QAAMC,CAAC,GAAC,CAAR;;AAEA,WAAMD,CAAC,GAACL,CAAC,CAACJ,MAAJ,IAAcU,CAAC,GAACJ,CAAC,CAACN,MAAxB,EAA+B;AAC3B,UAAII,CAAC,CAACK,CAAD,CAAD,GAAKH,CAAC,CAACI,CAAD,CAAV,EAAc;AACVjB,QAAAA,GAAG,CAACM,OAAO,CAAC,CAAD,CAAR,CAAH,GAAgBK,CAAC,CAACK,CAAD,CAAjB;AACAA,QAAAA,CAAC;AACJ,OAHD,MAIK;AACDhB,QAAAA,GAAG,CAACM,OAAO,CAAC,CAAD,CAAR,CAAH,GAAgBO,CAAC,CAACI,CAAD,CAAjB;AACAA,QAAAA,CAAC;AACJ;;AACDX,MAAAA,OAAO,CAAC,CAAD,CAAP;AAEH;;AAED,WAAOU,CAAC,GAACL,CAAC,CAACJ,MAAX,EAAkB;AACdP,MAAAA,GAAG,CAACM,OAAO,CAAC,CAAD,CAAR,CAAH,GAAgBK,CAAC,CAACK,CAAD,CAAjB;AACAA,MAAAA,CAAC;AACDV,MAAAA,OAAO,CAAC,CAAD,CAAP;AACH;;AAED,WAAOW,CAAC,GAACJ,CAAC,CAACN,MAAX,EAAkB;AACdP,MAAAA,GAAG,CAACM,OAAO,CAAC,CAAD,CAAR,CAAH,GAAgBO,CAAC,CAACI,CAAD,CAAjB;AACAA,MAAAA,CAAC;AACDX,MAAAA,OAAO,CAAC,CAAD,CAAP;AACH;AACJ;AACJ","sourcesContent":["export default function merge_sort_animations(arr){\nlet animations=[]\n// let k=1\n// asd(k)\n// return k\nmerge(arr,arr,animations,[0])\nreturn arr\n}\n\nfunction asd(k){\n    return k++\n\n}\n\nfunction merge(arr,auxiliaryArr,animations,counter){\n    if (auxiliaryArr.length > 1){\n        let midIndx=Math.floor(auxiliaryArr.length/2)\n        let L = auxiliaryArr.slice(0,midIndx)\n        let R= auxiliaryArr.slice(midIndx)\n        console.log(L,R,counter[0])\n        merge(arr,L,animations,counter)\n        merge(arr,R,animations,counter)\n        let i,j=0\n\n        while(i<L.length && j<R.length){\n            if (L[i]>R[j]){\n                arr[counter[0]]=L[i]\n                i++\n            }\n            else {\n                arr[counter[0]]=R[j]\n                j++\n            }\n            counter[0]++\n        \n        }\n        \n        while (i<L.length){\n            arr[counter[0]]=L[i]\n            i++\n            counter[0]++\n        }\n        \n        while (j<R.length){\n            arr[counter[0]]=R[j]\n            j++\n            counter[0]++\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}