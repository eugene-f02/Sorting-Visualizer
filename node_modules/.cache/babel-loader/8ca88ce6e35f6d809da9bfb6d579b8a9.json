{"ast":null,"code":"var _jsxFileName = \"/Users/eugene/Desktop/sorting-algo/sorting-algo/src/Header.js\";\nimport React from 'react';\nimport Timer from './Timer.js';\nimport Bars, { MAX_SPEED, MIN_SPEED } from './Bars.js';\nexport default class Header extends React.Component {\n  render() {\n    let speed = \"\";\n    if (this.state.animation_speed > 120) speed = \"very fast\";else if (this.state.animation_speed > 90) speed = \"fast\";else if (this.state.animation_speed > 50) speed = \"medium\";else speed = \"slow\";\n    let max = Math.floor(window.innerWidth / 25 * 0.9);\n    let min = Math.floor(window.innerWidth / 25 * 0.25);\n    return /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"horizontalCenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"style\",\n      id: \"generate_new_array\",\n      onClick: () => {\n        this.this.props.generate_new_array();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, \"Generate New Array\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.sortBars(\"quick\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, \"Quick Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.sortBars(\"heap\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, \"Heap Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.sortBars(\"merge\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, \"Merge Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.sortBars(\"bubble\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"Bubble Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.sortBars(\"insert\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, \"Insertion Sort\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"sliderContainer\",\n      className: \"horizontalCenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sliders\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, \"Speed (\", speed, \"): \"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"slider\",\n      type: \"range\",\n      min: MIN_SPEED,\n      max: MAX_SPEED,\n      value: this.props.state.animation_speed,\n      name: \"animation_speed\",\n      onChange: this.props.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"stop\",\n      onClick: () => this.props.StopOrReset(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, this.props.state.sorted ? \"Reset\" : \"Stop\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sliders\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, \"Bars (\", this.props.state.num_of_bars, \"):\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"slider\",\n      id: \"barSlider\",\n      type: \"range\",\n      min: min < 2 ? 2 : min,\n      max: max < 2 ? 2 : max,\n      value: this.props.state.num_of_bars,\n      name: \"num_of_bars\",\n      onChange: this.props.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Timer, {\n      time: this.props.state.time,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/eugene/Desktop/sorting-algo/sorting-algo/src/Header.js"],"names":["React","Timer","Bars","MAX_SPEED","MIN_SPEED","Header","Component","render","speed","state","animation_speed","max","Math","floor","window","innerWidth","min","this","props","generate_new_array","sortBars","handleChange","StopOrReset","sorted","num_of_bars","time"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Timer from './Timer.js'\nimport Bars, {MAX_SPEED,MIN_SPEED} from './Bars.js'\n\nexport default class Header extends React.Component {\n    render(){\n         let speed=\"\"\n\n\n        if (this.state.animation_speed>120)speed=\"very fast\"\n        else if (this.state.animation_speed>90)speed=\"fast\"\n        else if (this.state.animation_speed>50)speed=\"medium\"\n        else speed=\"slow\"\n\n\n        let max =Math.floor(window.innerWidth/25*0.9)\n        let min=Math.floor(window.innerWidth/25*0.25)\n\n        return ( \n            <header>\n            <div className='horizontalCenter'>\n            <button className=\"style\" id=\"generate_new_array\" onClick={() => {this.this.props.generate_new_array()}}>Generate New Array</button>\n            <button onClick={() => this.props.sortBars(\"quick\")}>Quick Sort</button>\n            <button onClick={() => this.props.sortBars(\"heap\")}>Heap Sort</button>\n            <button onClick={() => this.props.sortBars(\"merge\")}>Merge Sort</button>\n            <button onClick={() => this.props.sortBars(\"bubble\")}>Bubble Sort</button>\n            <button onClick={() => this.props.sortBars(\"insert\")}>Insertion Sort</button>\n            {/* <button onClick={() => console.log(this.state)}>State</button> */}\n            </div>\n\n            <div id='sliderContainer' className='horizontalCenter'>\n            <span className=\"sliders\">\n                    <label>Speed ({speed}): </label>\n                    <input className=\"slider\"\n                            type=\"range\" \n                            min={MIN_SPEED} max={MAX_SPEED} value={this.props.state.animation_speed}\n                            name=\"animation_speed\" \n                            onChange={this.props.handleChange} \n                    />\n            </span>\n\n            <button id=\"stop\" onClick={() => this.props.StopOrReset()}>{this.props.state.sorted ? \"Reset\" : \"Stop\"}</button>\n\n            <span className=\"sliders\">\n                    <label>Bars ({this.props.state.num_of_bars}):</label>\n                    <input  className=\"slider\" id='barSlider'\n                            type=\"range\" \n                            min={min<2 ? 2: min} max={max<2 ? 2:max} value={this.props.state.num_of_bars}\n                            name=\"num_of_bars\" \n                            onChange={this.props.handleChange} \n                    />\n            </span>\n            </div>\n            <Timer time={this.props.state.time}/>\n            </header>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}