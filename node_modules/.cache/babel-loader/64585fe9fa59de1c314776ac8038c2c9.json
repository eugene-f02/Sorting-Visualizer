{"ast":null,"code":"export default function merge_sort_animations(arr) {\n  let animations = []; // let k=1\n  // asd(k)\n  // return k\n\n  merge(arr);\n  return arr;\n} // function asd(k){\n//     return k++\n// }\n\nfunction merge(arr) {\n  if (arr.length > 1) {\n    let midIndx = Math.floor(arr.length / 2);\n    let L = arr.slice(0, midIndx);\n    let R = arr.slice(midIndx);\n    console.log(L, R);\n    merge(L);\n    merge(R);\n    let i,\n        j,\n        k = 0;\n    console.log(\"asdads\", arr, i, j, k);\n\n    while (i < L.length && j < R.length) {\n      if (L[i] > R[j]) {\n        console.log(\"2asdsad\");\n        arr[k] = L[i];\n        i++;\n      } else {\n        console.log(\"asd\");\n        arr[k] = R[j];\n        j++;\n      }\n\n      k++;\n    }\n\n    while (i < L.length) {\n      arr[k] = L[i];\n      i++;\n      k++;\n    }\n\n    while (j < R.length) {\n      arr[k] = R[j];\n      j++;\n      k++;\n    }\n\n    console.log(\"asdads\", arr);\n  }\n}","map":{"version":3,"sources":["/Users/eugene/Desktop/sorting-algo/sorting-algo/src/sorting-algo/merge_sort.js"],"names":["merge_sort_animations","arr","animations","merge","length","midIndx","Math","floor","L","slice","R","console","log","i","j","k"],"mappings":"AAAA,eAAe,SAASA,qBAAT,CAA+BC,GAA/B,EAAmC;AAClD,MAAIC,UAAU,GAAC,EAAf,CADkD,CAElD;AACA;AACA;;AACAC,EAAAA,KAAK,CAACF,GAAD,CAAL;AACA,SAAOA,GAAP;AACC,C,CAED;AACA;AAEA;;AAEA,SAASE,KAAT,CAAeF,GAAf,EAAmB;AACf,MAAIA,GAAG,CAACG,MAAJ,GAAa,CAAjB,EAAmB;AACf,QAAIC,OAAO,GAACC,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACG,MAAJ,GAAW,CAAtB,CAAZ;AACA,QAAII,CAAC,GAAGP,GAAG,CAACQ,KAAJ,CAAU,CAAV,EAAYJ,OAAZ,CAAR;AACA,QAAIK,CAAC,GAAGT,GAAG,CAACQ,KAAJ,CAAUJ,OAAV,CAAR;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ,EAAcE,CAAd;AACAP,IAAAA,KAAK,CAACK,CAAD,CAAL;AACAL,IAAAA,KAAK,CAACO,CAAD,CAAL;AACA,QAAIG,CAAJ;AAAA,QAAMC,CAAN;AAAA,QAAQC,CAAC,GAAC,CAAV;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBX,GAArB,EAAyBY,CAAzB,EAA2BC,CAA3B,EAA6BC,CAA7B;;AAGA,WAAMF,CAAC,GAACL,CAAC,CAACJ,MAAJ,IAAcU,CAAC,GAACJ,CAAC,CAACN,MAAxB,EAA+B;AAC3B,UAAII,CAAC,CAACK,CAAD,CAAD,GAAKH,CAAC,CAACI,CAAD,CAAV,EAAc;AACVH,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAX,QAAAA,GAAG,CAACc,CAAD,CAAH,GAAOP,CAAC,CAACK,CAAD,CAAR;AACAA,QAAAA,CAAC;AACJ,OAJD,MAKK;AACDF,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAX,QAAAA,GAAG,CAACc,CAAD,CAAH,GAAOL,CAAC,CAACI,CAAD,CAAR;AACAA,QAAAA,CAAC;AACJ;;AACDC,MAAAA,CAAC;AAEJ;;AAED,WAAOF,CAAC,GAACL,CAAC,CAACJ,MAAX,EAAkB;AACdH,MAAAA,GAAG,CAACc,CAAD,CAAH,GAAOP,CAAC,CAACK,CAAD,CAAR;AACAA,MAAAA,CAAC;AACDE,MAAAA,CAAC;AACJ;;AAED,WAAOD,CAAC,GAACJ,CAAC,CAACN,MAAX,EAAkB;AACdH,MAAAA,GAAG,CAACc,CAAD,CAAH,GAAOL,CAAC,CAACI,CAAD,CAAR;AACAA,MAAAA,CAAC;AACDC,MAAAA,CAAC;AACJ;;AACDJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBX,GAArB;AACH;AACJ","sourcesContent":["export default function merge_sort_animations(arr){\nlet animations=[]\n// let k=1\n// asd(k)\n// return k\nmerge(arr)\nreturn arr\n}\n\n// function asd(k){\n//     return k++\n\n// }\n\nfunction merge(arr){\n    if (arr.length > 1){\n        let midIndx=Math.floor(arr.length/2)\n        let L = arr.slice(0,midIndx)\n        let R = arr.slice(midIndx)\n        console.log(L,R)\n        merge(L)\n        merge(R)\n        let i,j,k=0\n        console.log(\"asdads\",arr,i,j,k)\n        \n\n        while(i<L.length && j<R.length){\n            if (L[i]>R[j]){\n                console.log(\"2asdsad\")\n                arr[k]=L[i]\n                i++\n            }\n            else {\n                console.log(\"asd\")\n                arr[k]=R[j]\n                j++\n            }\n            k++\n        \n        }\n        \n        while (i<L.length){\n            arr[k]=L[i]\n            i++\n            k++\n        }\n        \n        while (j<R.length){\n            arr[k]=R[j]\n            j++\n            k++\n        }\n        console.log(\"asdads\",arr)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}