{"ast":null,"code":"export default function merge_sort_animations(arr) {\n  let animations = []; // let k=1\n  // asd(k)\n  // return k\n\n  merge(arr, arr, animations, {\n    a: 0\n  });\n  return animations;\n}\n\nfunction asd(k) {\n  return k++;\n}\n\nfunction merge(arr, auxiliaryArr, animations, counter) {\n  if (auxiliaryArr.length > 1) {\n    let midIndx = Math.floor(auxiliaryArr.length / 2);\n    let L = auxiliaryArr.slice(0, midIndx);\n    let R = auxiliaryArr.slice(midIndx);\n    console.log(L, R);\n    merge(arr, L, animations);\n    merge(arr, R, animations);\n    let i,\n        j,\n        k = 0;\n\n    while (i < L.length && j < R.length) {\n      if (L[i] > R[j]) {\n        arr[k] = L[i];\n        i++;\n      } else {\n        arr[k] = R[j];\n        j++;\n      }\n\n      k++;\n    }\n\n    while (i < L.length) {\n      arr[k] = L[i];\n      i++;\n      k++;\n    }\n\n    while (j < R.length) {\n      arr[k] = R[j];\n      j++;\n      k++;\n    }\n  }\n}","map":{"version":3,"sources":["/Users/eugene/Desktop/sorting-algo/sorting-algo/src/sorting-algo/merge_sort.js"],"names":["merge_sort_animations","arr","animations","merge","a","asd","k","auxiliaryArr","counter","length","midIndx","Math","floor","L","slice","R","console","log","i","j"],"mappings":"AAAA,eAAe,SAASA,qBAAT,CAA+BC,GAA/B,EAAmC;AAClD,MAAIC,UAAU,GAAC,EAAf,CADkD,CAElD;AACA;AACA;;AACAC,EAAAA,KAAK,CAACF,GAAD,EAAKA,GAAL,EAASC,UAAT,EAAoB;AAACE,IAAAA,CAAC,EAAC;AAAH,GAApB,CAAL;AACA,SAAOF,UAAP;AACC;;AAED,SAASG,GAAT,CAAaC,CAAb,EAAe;AACX,SAAOA,CAAC,EAAR;AAEH;;AAED,SAASH,KAAT,CAAeF,GAAf,EAAmBM,YAAnB,EAAgCL,UAAhC,EAA2CM,OAA3C,EAAmD;AAC/C,MAAID,YAAY,CAACE,MAAb,GAAsB,CAA1B,EAA4B;AACxB,QAAIC,OAAO,GAACC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACE,MAAb,GAAoB,CAA/B,CAAZ;AACA,QAAII,CAAC,GAAGN,YAAY,CAACO,KAAb,CAAmB,CAAnB,EAAqBJ,OAArB,CAAR;AACA,QAAIK,CAAC,GAAER,YAAY,CAACO,KAAb,CAAmBJ,OAAnB,CAAP;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ,EAAcE,CAAd;AACAZ,IAAAA,KAAK,CAACF,GAAD,EAAKY,CAAL,EAAOX,UAAP,CAAL;AACAC,IAAAA,KAAK,CAACF,GAAD,EAAKc,CAAL,EAAOb,UAAP,CAAL;AACA,QAAIgB,CAAJ;AAAA,QAAMC,CAAN;AAAA,QAAQb,CAAC,GAAC,CAAV;;AAEA,WAAMY,CAAC,GAACL,CAAC,CAACJ,MAAJ,IAAcU,CAAC,GAACJ,CAAC,CAACN,MAAxB,EAA+B;AAC3B,UAAII,CAAC,CAACK,CAAD,CAAD,GAAKH,CAAC,CAACI,CAAD,CAAV,EAAc;AACVlB,QAAAA,GAAG,CAACK,CAAD,CAAH,GAAOO,CAAC,CAACK,CAAD,CAAR;AACAA,QAAAA,CAAC;AACJ,OAHD,MAIK;AACDjB,QAAAA,GAAG,CAACK,CAAD,CAAH,GAAOS,CAAC,CAACI,CAAD,CAAR;AACAA,QAAAA,CAAC;AACJ;;AACDb,MAAAA,CAAC;AAEJ;;AAED,WAAOY,CAAC,GAACL,CAAC,CAACJ,MAAX,EAAkB;AACdR,MAAAA,GAAG,CAACK,CAAD,CAAH,GAAOO,CAAC,CAACK,CAAD,CAAR;AACAA,MAAAA,CAAC;AACDZ,MAAAA,CAAC;AACJ;;AAED,WAAOa,CAAC,GAACJ,CAAC,CAACN,MAAX,EAAkB;AACdR,MAAAA,GAAG,CAACK,CAAD,CAAH,GAAOS,CAAC,CAACI,CAAD,CAAR;AACAA,MAAAA,CAAC;AACDb,MAAAA,CAAC;AACJ;AACJ;AACJ","sourcesContent":["export default function merge_sort_animations(arr){\nlet animations=[]\n// let k=1\n// asd(k)\n// return k\nmerge(arr,arr,animations,{a:0})\nreturn animations\n}\n\nfunction asd(k){\n    return k++\n\n}\n\nfunction merge(arr,auxiliaryArr,animations,counter){\n    if (auxiliaryArr.length > 1){\n        let midIndx=Math.floor(auxiliaryArr.length/2)\n        let L = auxiliaryArr.slice(0,midIndx)\n        let R= auxiliaryArr.slice(midIndx)\n        console.log(L,R)\n        merge(arr,L,animations)\n        merge(arr,R,animations)\n        let i,j,k=0\n\n        while(i<L.length && j<R.length){\n            if (L[i]>R[j]){\n                arr[k]=L[i]\n                i++\n            }\n            else {\n                arr[k]=R[j]\n                j++\n            }\n            k++\n        \n        }\n        \n        while (i<L.length){\n            arr[k]=L[i]\n            i++\n            k++\n        }\n        \n        while (j<R.length){\n            arr[k]=R[j]\n            j++\n            k++\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}