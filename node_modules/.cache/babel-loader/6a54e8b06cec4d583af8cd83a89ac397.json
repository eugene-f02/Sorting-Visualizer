{"ast":null,"code":"export default function merge_sort_animations(arr) {\n  let animations = []; // let k=1\n  // asd(k)\n  // return k\n\n  merge(arr, animations);\n  return arr;\n} // function asd(k){\n//     return k++\n// }\n\nfunction merge(arr, animations) {\n  if (arr.length > 1) {\n    let midIndx = Math.floor(arr.length / 2);\n    let L = arr.slice(0, midIndx);\n    let R = arr.slice(midIndx);\n    merge(L, animations);\n    merge(R, animations);\n    let i = 0,\n        j = 0,\n        k = 0;\n\n    while (i < L.length && j < R.length) {\n      if (L[i] > R[j]) {\n        arr[k] = L[i];\n        animations.push([midIndx - 1 + i, midIndx - 1 + j]);\n        animations.push([midIndx - 1 + i, midIndx - 1 + j]);\n        animations.push([midIndx - 1 + i, midIndx - 1 + j]);\n        i++;\n      } else {\n        arr[k] = R[j];\n        animations.push([midIndx - 1 + i, midIndx - 1 + j]);\n        animations.push([midIndx - 1 + i, midIndx - 1 + j]);\n        animations.push([midIndx - 1 + i, midIndx - 1 + j]);\n        j++;\n      }\n\n      k++;\n    }\n\n    while (i < L.length) {\n      arr[k] = L[i];\n      animations.push([midIndx - 1 + i, midIndx - 1 + j]);\n      animations.push([midIndx - 1 + i, midIndx - 1 + j]);\n      animations.push([midIndx - 1 + i, midIndx - 1 + j]);\n      i++;\n      k++;\n    }\n\n    while (j < R.length) {\n      arr[k] = R[j];\n      animations.push([midIndx - 1 + i, midIndx - 1 + j]);\n      animations.push([midIndx - 1 + i, midIndx - 1 + j]);\n      animations.push([midIndx - 1 + i, midIndx - 1 + j]);\n      j++;\n      k++;\n    }\n  }\n}","map":{"version":3,"sources":["/Users/eugene/Desktop/sorting-algo/sorting-algo/src/sorting-algo/merge_sort.js"],"names":["merge_sort_animations","arr","animations","merge","length","midIndx","Math","floor","L","slice","R","i","j","k","push"],"mappings":"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","sourcesContent":["export default function merge_sort_animations(arr){\nlet animations=[]\n// let k=1\n// asd(k)\n// return k\nmerge(arr,animations)\nreturn arr\n}\n\n// function asd(k){\n//     return k++\n\n// }\n\nfunction merge(arr,animations){\n    if (arr.length > 1){\n        let midIndx=Math.floor(arr.length/2)\n        let L = arr.slice(0,midIndx)\n        let R = arr.slice(midIndx)\n        merge(L,animations)\n        merge(R,animations)\n        let i=0,j=0,k=0\n        \n\n        while(i<L.length && j<R.length){\n            if (L[i]>R[j]){\n                arr[k]=L[i]\n                animations.push([midIndx-1+i,midIndx-1+j])\n                animations.push([midIndx-1+i,midIndx-1+j])\n                animations.push([midIndx-1+i,midIndx-1+j])\n                i++\n\n\n            }\n            else {\n                arr[k]=R[j]\n                animations.push([midIndx-1+i,midIndx-1+j])\n                animations.push([midIndx-1+i,midIndx-1+j])\n                animations.push([midIndx-1+i,midIndx-1+j])\n\n                j++\n            }\n            k++\n        \n        }\n        \n        while (i<L.length){\n            arr[k]=L[i]\n            animations.push([midIndx-1+i,midIndx-1+j])\n            animations.push([midIndx-1+i,midIndx-1+j])\n            animations.push([midIndx-1+i,midIndx-1+j])\n\n            i++\n            k++\n        }\n        \n        while (j<R.length){\n            arr[k]=R[j]\n            animations.push([midIndx-1+i,midIndx-1+j])\n            animations.push([midIndx-1+i,midIndx-1+j])\n            animations.push([midIndx-1+i,midIndx-1+j])\n\n            j++\n            k++\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}